/// Autogenerated. Do not modify.
///
/// Profile: 21.60
import 'dart:typed_data';

import '../../base_type.dart';
import '../../data_message.dart';
import '../../definition_message.dart';
import '../../field.dart';
import '../../sub_field.dart';
import '../profile_type.dart';
import 'common_fields.dart';

class ConnectivityMessage extends DataMessage {
  ConnectivityMessage(
      {definitionMessage,
      developerFields,
      int localId = 0,
      Endian endian = Endian.little})
      : growable = definitionMessage == null,
        super(
            name: ConnectivityMessage.NAME,
            globalId: ConnectivityMessage.ID,
            localId: definitionMessage?.localId ?? localId,
            endian: definitionMessage?.endian ?? endian,
            definitionMessage: definitionMessage,
            developerFields: developerFields,
            fields: [
              ConnectivityBluetoothEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityBluetoothEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityBluetoothLeEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityBluetoothLeEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityAntEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(ConnectivityAntEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityNameField(
                  size: definitionMessage
                          ?.getFieldDefinition(ConnectivityNameField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityLiveTrackingEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityLiveTrackingEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityWeatherConditionsEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityWeatherConditionsEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityWeatherAlertsEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityWeatherAlertsEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityAutoActivityUploadEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityAutoActivityUploadEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityCourseDownloadEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityCourseDownloadEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityWorkoutDownloadEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityWorkoutDownloadEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityGpsEphemerisDownloadEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityGpsEphemerisDownloadEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityIncidentDetectionEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityIncidentDetectionEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              ConnectivityGrouptrackEnabledField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              ConnectivityGrouptrackEnabledField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null)
            ]);

  static const ID = 127;
  static const NAME = 'connectivity';

  final bool growable;

  static ConnectivityMessage fromBytes(
      DefinitionMessage definitionMessage, Uint8List bytes) {
    final message = ConnectivityMessage(definitionMessage: definitionMessage);
    message.readFromBytes(bytes);
    return message;
  }

  bool? get bluetoothEnabled {
    final field = getField(ConnectivityBluetoothEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set bluetoothEnabled(bool? value) {
    final field = getField(ConnectivityBluetoothEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get bluetoothLeEnabled {
    final field = getField(ConnectivityBluetoothLeEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set bluetoothLeEnabled(bool? value) {
    final field = getField(ConnectivityBluetoothLeEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get antEnabled {
    final field = getField(ConnectivityAntEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set antEnabled(bool? value) {
    final field = getField(ConnectivityAntEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  String? get connectivityName {
    final field = getField(ConnectivityNameField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set connectivityName(String? value) {
    final field = getField(ConnectivityNameField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get liveTrackingEnabled {
    final field = getField(ConnectivityLiveTrackingEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set liveTrackingEnabled(bool? value) {
    final field = getField(ConnectivityLiveTrackingEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get weatherConditionsEnabled {
    final field = getField(ConnectivityWeatherConditionsEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set weatherConditionsEnabled(bool? value) {
    final field = getField(ConnectivityWeatherConditionsEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get weatherAlertsEnabled {
    final field = getField(ConnectivityWeatherAlertsEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set weatherAlertsEnabled(bool? value) {
    final field = getField(ConnectivityWeatherAlertsEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get autoActivityUploadEnabled {
    final field = getField(ConnectivityAutoActivityUploadEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set autoActivityUploadEnabled(bool? value) {
    final field = getField(ConnectivityAutoActivityUploadEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get courseDownloadEnabled {
    final field = getField(ConnectivityCourseDownloadEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set courseDownloadEnabled(bool? value) {
    final field = getField(ConnectivityCourseDownloadEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get workoutDownloadEnabled {
    final field = getField(ConnectivityWorkoutDownloadEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set workoutDownloadEnabled(bool? value) {
    final field = getField(ConnectivityWorkoutDownloadEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get gpsEphemerisDownloadEnabled {
    final field = getField(ConnectivityGpsEphemerisDownloadEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set gpsEphemerisDownloadEnabled(bool? value) {
    final field = getField(ConnectivityGpsEphemerisDownloadEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get incidentDetectionEnabled {
    final field = getField(ConnectivityIncidentDetectionEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set incidentDetectionEnabled(bool? value) {
    final field = getField(ConnectivityIncidentDetectionEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }

  bool? get grouptrackEnabled {
    final field = getField(ConnectivityGrouptrackEnabledField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  set grouptrackEnabled(bool? value) {
    final field = getField(ConnectivityGrouptrackEnabledField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    }
  }
}

class ConnectivityBluetoothEnabledField extends Field {
  ConnectivityBluetoothEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'bluetooth_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 0;
}

class ConnectivityBluetoothLeEnabledField extends Field {
  ConnectivityBluetoothLeEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'bluetooth_le_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 1;
}

class ConnectivityAntEnabledField extends Field {
  ConnectivityAntEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'ant_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 2;
}

class ConnectivityNameField extends Field {
  ConnectivityNameField({int size = 0, bool growable = true})
      : super(
            name: 'name',
            id: ID,
            type: BaseType.STRING,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 3;
}

class ConnectivityLiveTrackingEnabledField extends Field {
  ConnectivityLiveTrackingEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'live_tracking_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 4;
}

class ConnectivityWeatherConditionsEnabledField extends Field {
  ConnectivityWeatherConditionsEnabledField(
      {int size = 0, bool growable = true})
      : super(
            name: 'weather_conditions_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 5;
}

class ConnectivityWeatherAlertsEnabledField extends Field {
  ConnectivityWeatherAlertsEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'weather_alerts_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 6;
}

class ConnectivityAutoActivityUploadEnabledField extends Field {
  ConnectivityAutoActivityUploadEnabledField(
      {int size = 0, bool growable = true})
      : super(
            name: 'auto_activity_upload_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 7;
}

class ConnectivityCourseDownloadEnabledField extends Field {
  ConnectivityCourseDownloadEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'course_download_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 8;
}

class ConnectivityWorkoutDownloadEnabledField extends Field {
  ConnectivityWorkoutDownloadEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'workout_download_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 9;
}

class ConnectivityGpsEphemerisDownloadEnabledField extends Field {
  ConnectivityGpsEphemerisDownloadEnabledField(
      {int size = 0, bool growable = true})
      : super(
            name: 'gps_ephemeris_download_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 10;
}

class ConnectivityIncidentDetectionEnabledField extends Field {
  ConnectivityIncidentDetectionEnabledField(
      {int size = 0, bool growable = true})
      : super(
            name: 'incident_detection_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 11;
}

class ConnectivityGrouptrackEnabledField extends Field {
  ConnectivityGrouptrackEnabledField({int size = 0, bool growable = true})
      : super(
            name: 'grouptrack_enabled',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 12;
}
