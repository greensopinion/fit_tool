/// Autogenerated. Do not modify.
///
/// Profile: 21.60

import 'dart:typed_data';

import '../../base_type.dart';
import '../../data_message.dart';
import '../../definition_message.dart';
import '../../field.dart';
import '../../sub_field.dart';
import '../profile_type.dart';
import '../../errors.dart';
import 'common_fields.dart';

// ignore_for_file: constant_identifier_names

class DiveSummaryMessage extends DataMessage {
  DiveSummaryMessage(
      {definitionMessage,
      developerFields,
      int localId = 0,
      Endian endian = Endian.little})
      : growable = definitionMessage == null,
        super(
            name: DiveSummaryMessage.NAME,
            globalId: DiveSummaryMessage.ID,
            localId: definitionMessage?.localId ?? localId,
            endian: definitionMessage?.endian ?? endian,
            definitionMessage: definitionMessage,
            developerFields: developerFields,
            fields: [
              TimestampField(
                  size: definitionMessage
                          ?.getFieldDefinition(TimestampField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryReferenceMesgField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryReferenceMesgField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryReferenceIndexField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              DiveSummaryReferenceIndexField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryAvgDepthField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryAvgDepthField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryMaxDepthField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryMaxDepthField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummarySurfaceIntervalField(
                  size: definitionMessage
                          ?.getFieldDefinition(
                              DiveSummarySurfaceIntervalField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryStartCnsField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryStartCnsField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryEndCnsField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryEndCnsField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryStartN2Field(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryStartN2Field.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryEndN2Field(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryEndN2Field.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryO2ToxicityField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryO2ToxicityField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryDiveNumberField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryDiveNumberField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null),
              DiveSummaryBottomTimeField(
                  size: definitionMessage
                          ?.getFieldDefinition(DiveSummaryBottomTimeField.ID)
                          ?.size ??
                      0,
                  growable: definitionMessage == null)
            ]);

  /// The Global ID of the message. In the FIT documentation this is referred to as the "Global Message Number".
  static const ID = 268;
  static const NAME = 'dive_summary';

  final bool growable;

  /// Returns an instance of DiveSummaryMessage from a bytes list.
  static DiveSummaryMessage fromBytes(
      DefinitionMessage definitionMessage, Uint8List bytes) {
    final message = DiveSummaryMessage(definitionMessage: definitionMessage);
    message.readFromBytes(bytes);
    return message;
  }

  /// Returns the value of the timestamp field in  milliseconds since January 1st, 1970 at 00:00:00 UTC
  int? get timestamp {
    final field = getField(TimestampField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the timestamp field. [value] is milliseconds since January 1st, 1970 at 00:00:00 UTC. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set timestamp(int? value) {
    final field = getField(TimestampField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the referenceMesg field. Returns null if the field is not defined in the message.
  int? get referenceMesg {
    final field = getField(DiveSummaryReferenceMesgField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the referenceMesg field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set referenceMesg(int? value) {
    final field = getField(DiveSummaryReferenceMesgField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the referenceIndex field. Returns null if the field is not defined in the message.
  int? get referenceIndex {
    final field = getField(DiveSummaryReferenceIndexField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the referenceIndex field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set referenceIndex(int? value) {
    final field = getField(DiveSummaryReferenceIndexField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the avgDepth field. Returns null if the field is not defined in the message.
  double? get avgDepth {
    final field = getField(DiveSummaryAvgDepthField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the avgDepth field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set avgDepth(double? value) {
    final field = getField(DiveSummaryAvgDepthField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the maxDepth field. Returns null if the field is not defined in the message.
  double? get maxDepth {
    final field = getField(DiveSummaryMaxDepthField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the maxDepth field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set maxDepth(double? value) {
    final field = getField(DiveSummaryMaxDepthField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the surfaceInterval field. Returns null if the field is not defined in the message.
  int? get surfaceInterval {
    final field = getField(DiveSummarySurfaceIntervalField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the surfaceInterval field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set surfaceInterval(int? value) {
    final field = getField(DiveSummarySurfaceIntervalField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the startCns field. Returns null if the field is not defined in the message.
  int? get startCns {
    final field = getField(DiveSummaryStartCnsField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the startCns field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set startCns(int? value) {
    final field = getField(DiveSummaryStartCnsField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the endCns field. Returns null if the field is not defined in the message.
  int? get endCns {
    final field = getField(DiveSummaryEndCnsField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the endCns field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set endCns(int? value) {
    final field = getField(DiveSummaryEndCnsField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the startN2 field. Returns null if the field is not defined in the message.
  int? get startN2 {
    final field = getField(DiveSummaryStartN2Field.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the startN2 field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set startN2(int? value) {
    final field = getField(DiveSummaryStartN2Field.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the endN2 field. Returns null if the field is not defined in the message.
  int? get endN2 {
    final field = getField(DiveSummaryEndN2Field.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the endN2 field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set endN2(int? value) {
    final field = getField(DiveSummaryEndN2Field.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the o2Toxicity field. Returns null if the field is not defined in the message.
  int? get o2Toxicity {
    final field = getField(DiveSummaryO2ToxicityField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the o2Toxicity field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set o2Toxicity(int? value) {
    final field = getField(DiveSummaryO2ToxicityField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the diveNumber field. Returns null if the field is not defined in the message.
  int? get diveNumber {
    final field = getField(DiveSummaryDiveNumberField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the diveNumber field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set diveNumber(int? value) {
    final field = getField(DiveSummaryDiveNumberField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }

  /// Returns the value of the bottomTime field. Returns null if the field is not defined in the message.
  double? get bottomTime {
    final field = getField(DiveSummaryBottomTimeField.ID);
    if (field != null && field.isValid()) {
      var subField = field.getValidSubField(fields);
      return field.getValue(subField: subField);
    } else {
      return null;
    }
  }

  /// Sets the bottomTime field with [value]. Throws [FieldNotDefinedError] if the field is not defined in the message.
  set bottomTime(double? value) {
    final field = getField(DiveSummaryBottomTimeField.ID);

    if (field != null) {
      if (value == null) {
        field.clear();
      } else {
        var subField = field.getValidSubField(fields);
        field.setValue(0, value, subField);
      }
    } else {
      throw FieldNotDefinedError(field!.name);
    }
  }
}

class DiveSummaryReferenceMesgField extends Field {
  DiveSummaryReferenceMesgField({int size = 0, bool growable = true})
      : super(
            name: 'reference_mesg',
            id: ID,
            type: BaseType.UINT16,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 0;
}

class DiveSummaryReferenceIndexField extends Field {
  DiveSummaryReferenceIndexField({int size = 0, bool growable = true})
      : super(
            name: 'reference_index',
            id: ID,
            type: BaseType.UINT16,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 1;
}

class DiveSummaryAvgDepthField extends Field {
  DiveSummaryAvgDepthField({int size = 0, bool growable = true})
      : super(
            name: 'avg_depth',
            id: ID,
            type: BaseType.UINT32,
            offset: 0,
            scale: 1000,
            size: size,
            units: 'm',
            mainTypeName: 'uint32',
            growable: growable,
            subFields: []);

  static const ID = 2;
}

class DiveSummaryMaxDepthField extends Field {
  DiveSummaryMaxDepthField({int size = 0, bool growable = true})
      : super(
            name: 'max_depth',
            id: ID,
            type: BaseType.UINT32,
            offset: 0,
            scale: 1000,
            size: size,
            units: 'm',
            mainTypeName: 'uint32',
            growable: growable,
            subFields: []);

  static const ID = 3;
}

class DiveSummarySurfaceIntervalField extends Field {
  DiveSummarySurfaceIntervalField({int size = 0, bool growable = true})
      : super(
            name: 'surface_interval',
            id: ID,
            type: BaseType.UINT32,
            offset: 0,
            scale: 1,
            size: size,
            units: 's',
            mainTypeName: 'uint32',
            growable: growable,
            subFields: []);

  static const ID = 4;
}

class DiveSummaryStartCnsField extends Field {
  DiveSummaryStartCnsField({int size = 0, bool growable = true})
      : super(
            name: 'start_cns',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            units: 'percent',
            mainTypeName: 'uint8',
            growable: growable,
            subFields: []);

  static const ID = 5;
}

class DiveSummaryEndCnsField extends Field {
  DiveSummaryEndCnsField({int size = 0, bool growable = true})
      : super(
            name: 'end_cns',
            id: ID,
            type: BaseType.UINT8,
            offset: 0,
            scale: 1,
            size: size,
            units: 'percent',
            mainTypeName: 'uint8',
            growable: growable,
            subFields: []);

  static const ID = 6;
}

class DiveSummaryStartN2Field extends Field {
  DiveSummaryStartN2Field({int size = 0, bool growable = true})
      : super(
            name: 'start_n2',
            id: ID,
            type: BaseType.UINT16,
            offset: 0,
            scale: 1,
            size: size,
            units: 'percent',
            mainTypeName: 'uint16',
            growable: growable,
            subFields: []);

  static const ID = 7;
}

class DiveSummaryEndN2Field extends Field {
  DiveSummaryEndN2Field({int size = 0, bool growable = true})
      : super(
            name: 'end_n2',
            id: ID,
            type: BaseType.UINT16,
            offset: 0,
            scale: 1,
            size: size,
            units: 'percent',
            mainTypeName: 'uint16',
            growable: growable,
            subFields: []);

  static const ID = 8;
}

class DiveSummaryO2ToxicityField extends Field {
  DiveSummaryO2ToxicityField({int size = 0, bool growable = true})
      : super(
            name: 'o2_toxicity',
            id: ID,
            type: BaseType.UINT16,
            offset: 0,
            scale: 1,
            size: size,
            units: 'OTUs',
            mainTypeName: 'uint16',
            growable: growable,
            subFields: []);

  static const ID = 9;
}

class DiveSummaryDiveNumberField extends Field {
  DiveSummaryDiveNumberField({int size = 0, bool growable = true})
      : super(
            name: 'dive_number',
            id: ID,
            type: BaseType.UINT32,
            offset: 0,
            scale: 1,
            size: size,
            growable: growable,
            subFields: []);

  static const ID = 10;
}

class DiveSummaryBottomTimeField extends Field {
  DiveSummaryBottomTimeField({int size = 0, bool growable = true})
      : super(
            name: 'bottom_time',
            id: ID,
            type: BaseType.UINT32,
            offset: 0,
            scale: 1000,
            size: size,
            units: 's',
            mainTypeName: 'uint32',
            growable: growable,
            subFields: []);

  static const ID = 11;
}
