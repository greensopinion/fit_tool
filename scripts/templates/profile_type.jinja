/// Autogenerated. Do not modify.
///
/// Profile: {{ sdk_version }}

enum ProfileType {
{%- for name in profile_types %}
  {{ name }}{%- if not loop.last %},{% endif %}
{%- endfor %}
}


{%- for type_name, type_value in profile.types_by_name.items() if type_name != 'date_time' %}
{%- if profile.types_by_name[type_name].values_by_name.values() %}
enum {{profile.type_class_name_by_name[type_name]}} {
{%- for key, value in profile.types_by_name[type_name].values_by_name.items() if key != 'forecast' %}
  {{ key|e }}{%- if not loop.last %},{% endif %}
{%- endfor %}
}

extension {{profile.type_class_name_by_name[type_name]}}Ext on {{profile.type_class_name_by_name[type_name]}} {
  int get value {
    switch(this) {
{%- for key, value in profile.types_by_name[type_name].values_by_name.items() if key != 'forecast' %}
        case {{profile.type_class_name_by_name[type_name]}}.{{ key|e }}:
            return {{ value|e }};
{%- endfor %}
     }
}

   static {{profile.type_class_name_by_name[type_name]}} fromValue(int value) {
    switch(value) {
{%- for key, value in profile.types_by_name[type_name].values_by_name.items() if key != 'forecast' %}
        case {{ value|e }}:
            return {{profile.type_class_name_by_name[type_name]}}.{{ key|e }};
{%- endfor %}
        default:
            throw ArgumentError.value(value);
    }
  }
}
{%- endif %}
{% endfor %}


